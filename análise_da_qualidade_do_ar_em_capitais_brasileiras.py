# -*- coding: utf-8 -*-
"""An√°lise da Qualidade do Ar em Capitais Brasileiras.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zZsIXd6g7fhthPsvtyyKgOQY4M9QnBcx

# üå± An√°lise da Qualidade do Ar em Capitais Brasileiras

## 1. Introdu√ß√£o

A qualidade do ar √© um fator fundamental para a sa√∫de p√∫blica e a preserva√ß√£o do meio ambiente. Em grandes cidades, o aumento do tr√°fego de ve√≠culos, da atividade industrial e das queimadas pode elevar a concentra√ß√£o de poluentes como material particulado (PM2.5 e PM10) e oz√¥nio, colocando a popula√ß√£o em risco. Este projeto tem como objetivo analisar padr√µes de polui√ß√£o atmosf√©rica em algumas capitais brasileiras, identificando tend√™ncias temporais e diferen√ßas regionais.

---

## 2. Objetivo

Explorar os dados sobre qualidade do ar em cidades brasileiras para identificar padr√µes, varia√ß√µes sazonais e poss√≠veis implica√ß√µes para a sa√∫de p√∫blica. O foco √© observar os n√≠veis de PM2.5, PM10 e oz√¥nio em S√£o Paulo, Rio de Janeiro e Belo Horizonte.

---

## 3. Fonte de Dados

Os dados utilizados neste projeto foram obtidos a partir de uma base dispon√≠vel no Kaggle:

üìÇ Kaggle Dataset: [Air Quality in Brazil](https://www.kaggle.com/datasets/matheusfreitag/air-quality-brazil)

A base foi simplificada e simulada neste projeto para fins did√°ticos.

---

## 4. Metodologia

- Importa√ß√£o dos dados
- Limpeza e tratamento (datas, colunas, dados faltantes)
- An√°lise explorat√≥ria (gr√°ficos e estat√≠sticas)
- Compara√ß√µes por cidade e ao longo do tempo

---
"""

# 1. Importa√ß√£o das bibliotecas
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Estilo de gr√°ficos
sns.set(style="whitegrid")

# 2. Carrega os dados
df = pd.read_csv('sp_air_quality.csv')

df['Datetime'] = pd.to_datetime(df['Datetime'])

# 4. Cria√ß√£o de uma coluna com o m√™s
df['mes'] = df['Datetime'].dt.month

# Renoeando as colunas
df.rename(columns={
    'Datetime': 'data',
    'Station': 'cidade',
    'PM2.5': 'pm2_5',
    'PM10': 'pm10',
    'O3': 'ozonio'
}, inplace=True)

print(df.head())

# Limpeza dos dados

# Lista dos poluentes de interesse
poluentes = ['pm2_5', 'pm10', 'ozonio']

# Remove linhas que n√£o t√™m nenhum dos poluentes
df = df.dropna(subset=poluentes, how='all')

# Ordena antes de setar o √≠ndice para garantir a ordem temporal
df.sort_values(by=['cidade', 'data'], inplace=True)

# Define a coluna 'data' como √≠ndice
df.set_index('data', inplace=True)

# Interpola√ß√£o temporal por cidade
df[poluentes] = df.groupby('cidade')[poluentes].transform(
    lambda group: group.interpolate(method='time', limit=50)
)

# Remove colunas com mais de 90% de valores nulos
limite_nulos = 0.9
df = df.loc[:, df.isnull().mean() < limite_nulos]

print(df.head())
print(df.isnull().sum())

"""## Interpola√ß√£o
**A Interpola√ß√£o** √© uma t√©cnica para **estimar valores ausentes** (NaN) em uma s√©rie de dados com base nos valores ao redor.

√â muito √∫til em **s√©ries temporais** como dados ambientais, onde sensores √†s vezes falham por algumas horas ou dias.
"""

import matplotlib.pyplot as plt

# Garante que 'data' seja datetime (caso n√£o esteja mais no √≠ndice)
if not isinstance(df.index, pd.DatetimeIndex):
    df['data'] = pd.to_datetime(df['data'])
    df.set_index('data', inplace=True)

df.sort_index(inplace=True)

df_filtrado = df.loc['2013':'2020']

# Agrupa por ano e calcula m√©dia dos poluentes
media_anual = df_filtrado.groupby(df_filtrado.index.year)[['pm2_5', 'pm10', 'ozonio']].mean()

# Gera√ß√£o do gr√°fico
plt.figure(figsize=(10, 6))
for poluente in media_anual.columns:
    plt.plot(media_anual.index, media_anual[poluente], marker='o', label=poluente.upper())

plt.title('M√©dia Anual dos Poluentes (2013‚Äì2020)')
plt.xlabel('Ano')
plt.ylabel('Concentra√ß√£o M√©dia')
plt.xticks([2013,2014,2015,2016,2017,2018, 2019, 2020])
plt.grid(True, linestyle='--', alpha=0.5)
plt.legend()
plt.tight_layout()
plt.show()

import matplotlib.pyplot as plt

# Garante que 'data' esteja no √≠ndice e que esteja ordenado
if not isinstance(df.index, pd.DatetimeIndex):
    df['data'] = pd.to_datetime(df['data'])
    df.set_index('data', inplace=True)

# Ordena o √≠ndice ASC
df.sort_index(inplace=True)

df_filtrado = df.loc['2019-05-01':'2020-05-31']

# Agrupa por m√™s e calcula a m√©dia dos poluentes
media_mensal = df_filtrado.groupby(df_filtrado.index.month)[['pm2_5', 'pm10', 'ozonio']].mean()

# Gera√ß√£o do gr√°fico
plt.figure(figsize=(10, 6))
for poluente in media_mensal.columns:
    plt.plot(media_mensal.index, media_mensal[poluente], marker='o', label=poluente.upper())

plt.title('M√©dia Mensal dos Poluentes (Maio 2019 - Maio 2020)')
plt.xlabel('M√™s')
plt.ylabel('Concentra√ß√£o M√©dia')
plt.xticks(range(1, 13), ['Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez', 'Jan', 'Fev', 'Mar', 'Abr'])
plt.grid(True, linestyle='--', alpha=0.5)
plt.legend()
plt.tight_layout()
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Garante que 'data' esteja no √≠ndice e que esteja ordenado
if not isinstance(df.index, pd.DatetimeIndex):
    df['data'] = pd.to_datetime(df['data'])
    df.set_index('data', inplace=True)

df_2019 = df.loc['2019-01-01':'2019-12-31']

# Adiciona uma coluna com o m√™s extra√≠do da data
df_2019['mes'] = df_2019.index.month

# Agrupa por cidade e m√™s, calculando a m√©dia de cada poluente
media_mensal_cidade = df_2019.groupby(['mes', 'cidade'])[['pm2_5']].mean()

# Calcula a m√©dia anual por cidade para identificar as mais polu√≠das
media_anual_cidade = media_mensal_cidade.groupby('cidade')[['pm2_5']].mean()

# Ordena as cidades pela m√©dia anual de PM2.5
cidades_mais_polu√≠das = media_anual_cidade['pm2_5'].sort_values(ascending=False).head(5).index

# Filtra os dados apenas para as cidades mais polu√≠das
df_cidades_mais_polu√≠das = media_mensal_cidade[media_mensal_cidade.index.get_level_values('cidade').isin(cidades_mais_polu√≠das)]

# Gera√ß√£o do gr√°fico de barras
plt.figure(figsize=(12, 6))

largura_barras = 0.15

# Ajuste de posi√ß√£o das barras para cada cidade
for i, cidade in enumerate(cidades_mais_polu√≠das):
    cidade_data = df_cidades_mais_polu√≠das[df_cidades_mais_polu√≠das.index.get_level_values('cidade') == cidade]

    # Criando deslocamento para barras
    posicao = np.array(cidade_data.index.get_level_values('mes')) + (i - len(cidades_mais_polu√≠das) / 2) * largura_barras

    # Plotando as barras
    plt.bar(posicao, cidade_data['pm2_5'],
            label=f"{cidade}", alpha=0.7, width=largura_barras)

# Ajustes para o gr√°fico
plt.title('Cidades Mais Polu√≠das em 2019 - M√©dia Mensal de PM2.5')
plt.xlabel('M√™s')
plt.ylabel('Concentra√ß√£o M√©dia de PM2.5')
plt.xticks(range(1, 13), ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'])
plt.legend(title='Cidades', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(True, linestyle='--', alpha=0.5)
plt.tight_layout()
plt.show()

"""## 5. Resultados

- **A longo prazo** a emiss√£o de gases no geral no maior estado brasileiro vem diminuindo relativamente.
- √â poss√≠vel observar que **os meses em que h√° maior incid√™ncia de poluentes** no geral s√£o junho e julho.
- Na an√°lise dos dados referentes a **2019 e 2020** revelam que o evento da **Pandemia** causou uma redu√ß√£o nos gases poluentes.
- Dentre as 5 cidades mais emissoras, 4 se encontram na **Grande S√£o Paulo**.

---

## 6. Conclus√£o

A an√°lise dos dados de polui√ß√£o atmosf√©rica no Estado de **S√£o Paulo** revelou algumas tend√™ncias importantes que podem orientar pol√≠ticas p√∫blicas e a√ß√µes em √°reas cr√≠ticas de gest√£o ambiental.

- **A redu√ß√£o a longo prazo nas emiss√µes de gases** reflete um esfor√ßo cont√≠nuo de controle e mitiga√ß√£o de poluentes, embora ainda haja varia√ß√µes sazonais significativas.

- Os meses de **junho e julho** se destacam como per√≠odos de maior emiss√£o, possivelmente devido a condi√ß√µes clim√°ticas e atividades espec√≠ficas relacionadas a essas √©pocas do ano, como a maior locomo√ß√£o usando **carros**.

- **A pandemia de COVID-19** teve um impacto not√°vel na qualidade do ar, com uma **redu√ß√£o substancial** nas emiss√µes de poluentes em 2020, indicando que a diminui√ß√£o de **atividades industriais, transporte e outros fatores humanos** pode resultar em uma melhora significativa na qualidade do ar. Esse fen√¥meno destaca a import√¢ncia de pol√≠ticas p√∫blicas focadas na redu√ß√£o de emiss√µes e na promo√ß√£o de pr√°ticas sustent√°veis, como o trabalho remoto, entre outras medidas mesmo ap√≥s o fim de situa√ß√µes excepcionais como a pandemia.

- A an√°lise tamb√©m revela que a **Grande S√£o Paulo** concentra uma parte significativa das cidades com maior emiss√£o de poluentes, destacando a necessidade urgente de a√ß√µes espec√≠ficas para essas √°reas metropolitanas, que enfrentam um conjunto complexo de problemas relacionados ao **crescimento urbano e √† industrializa√ß√£o**. A redu√ß√£o cont√≠nua das emiss√µes nas principais cidades da regi√£o pode ser um passo fundamental para a melhoria da **qualidade de vida e da sa√∫de ambiental** para os habitantes dessas localidades.

---

## 7. Refer√™ncias

- Kaggle Dataset: https://www.kaggle.com/datasets/amandalk/sp-air-quality
- CETESB ‚Äì Qualidade do Ar: https://cetesb.sp.gov.br/ar/
- INMET ‚Äì Instituto Nacional de Meteorologia: https://www.gov.br/inmet
- IBGE ‚Äì Instituto Brasileiro de Geografia e Estat√≠stica: https://www.ibge.gov.br/

---

# Observa√ß√£o Importante:

üß™ O que s√£o PM2.5 e PM10?
PM significa Material Particulado ‚Äì que s√£o part√≠culas s√≥lidas e l√≠quidas suspensas no ar, como poeira, fuligem, fuma√ßa, polui√ß√£o de carros e queima de lixo.

PM10: s√£o part√≠culas inal√°veis com di√¢metro de at√© 10 micr√¥metros. Elas s√£o grandes o suficiente para entrar no nariz e garganta. Podem causar irrita√ß√µes respirat√≥rias, tosses e problemas no nariz e garganta.

PM2.5: s√£o ainda menores, com menos de 2,5 micr√¥metros de di√¢metro. Por serem t√£o finas, conseguem penetrar profundamente nos pulm√µes e at√© entrar na corrente sangu√≠nea. Est√£o mais associadas a problemas graves de sa√∫de, como doen√ßas card√≠acas, respirat√≥rias e at√© c√¢ncer.

üß¨ Em resumo:

Quanto menor o n√∫mero, mais perigosa √© a part√≠cula para a sa√∫de.
"""